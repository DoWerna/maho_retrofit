# Basiskonfiguration https://forum.linuxcnc.org/30-cnc-machines/41442-brother-tc-225-retrofit-and-robot-integration?start=20#204531
# Generated by PNCconf at Tue Mar  9 09:10:54 2021
# Using LinuxCNC version:  2.9.0~pre0
# If you make changes to this file, they will be
# overwritten when you run PNCconf again

loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
loadrt hostmot2
loadrt hm2_eth board_ip="192.168.1.121" config=" num_encoders=6 num_pwmgens=6 num_stepgens=0 sserial_port_0=00xxxxxx" 
setp    [HMOT](CARD0).watchdog.timeout_ns 5000000
loadrt pid names=pid.x,pid.y,pid.z,pid.s

loadrt or2 count=3
loadrt and2 count=11
loadrt matrix_kb config=8x8
loadrt toggle count=4
loadrt toggle2nist count=2
loadrt not count=2
loadrt mux8 names=muxfeed,shw.step-choice
loadrt conv_float_s32
loadrt edge #tool 

addf [HMOT](CARD0).read       servo-thread
addf motion-command-handler   servo-thread
addf motion-controller        servo-thread
addf pid.x.do-pid-calcs       servo-thread
addf pid.y.do-pid-calcs       servo-thread
addf pid.z.do-pid-calcs       servo-thread
addf pid.s.do-pid-calcs       servo-thread
addf [HMOT](CARD0).write      servo-thread

addf or2.0 servo-thread
addf or2.1 servo-thread #feed
addf or2.2 servo-thread #pause
addf and2.0 servo-thread
addf and2.1 servo-thread
addf and2.2 servo-thread 
addf and2.3 servo-thread
addf and2.4 servo-thread
addf and2.5 servo-thread
addf and2.6 servo-thread
addf and2.10 servo-thread #tool uncl
addf toggle.0 servo-thread
addf toggle.1 servo-thread
addf toggle.2 servo-thread #pause
addf toggle.3 servo-thread #tooluncl
addf matrix_kb.0 servo-thread 
addf toggle2nist.0 servo-thread
addf toggle2nist.1 servo-thread #pause
addf not.0 servo-thread
addf not.1 servo-thread
addf muxfeed servo-thread
addf conv-float-s32.0 servo-thread
addf edge.0 servo-thread

# Keycode
net keys matrix_kb.0.keycode hm2_7i97.0.7i73.0.1.keycode

# external output signals


# external input signals


# --- MIN-HOME-X ---
net min-home-x     <=  [HMOT](CARD0).inmux.00.input-00

# --- MIN-HOME-Y ---
net min-home-y     <=  [HMOT](CARD0).inmux.00.input-01

# --- MAX-HOME-Z ---
net max-home-z     <=  [HMOT](CARD0).inmux.00.input-02

# Global PWM setup

setp [HMOT](CARD0).pwmgen.pwm_frequency 48000

#*******************
#  AXIS X JOINT 0
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT
setp   pid.x.error-previous-target true

net x-index-enable  <=> pid.x.index-enable
net x-enable        =>  pid.x.enable
net x-pos-cmd       =>  pid.x.command
net x-pos-fb        =>  pid.x.feedback
net x-output        <=  pid.x.output

# ---PWM Generator signals/setup---
setp   [HMOT](CARD0).pwmgen.00.output-type 1 #PWM pin0
setp   [HMOT](CARD0).pwmgen.00.offset-mode 1 # offset mode so 50% = 0
setp   [HMOT](CARD0).pwmgen.00.scale   [JOINT_0]OUTPUT_SCALE 

net x-output     => [HMOT](CARD0).pwmgen.00.value
net x-pos-cmd    <= joint.0.motor-pos-cmd
net x-enable     <= joint.0.amp-enable-out
# enable first 4 PWMGens on x-enable
net x-enable   => [HMOT](CARD0).pwmgen.00.enable
net x-enable   => [HMOT](CARD0).pwmgen.01.enable
net x-enable   => [HMOT](CARD0).pwmgen.02.enable


# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.00.counter-mode 0
setp    [HMOT](CARD0).encoder.00.filter 1
setp    [HMOT](CARD0).encoder.00.index-invert 0
setp    [HMOT](CARD0).encoder.00.index-mask 0
setp    [HMOT](CARD0).encoder.00.index-mask-invert 0
setp    [HMOT](CARD0).encoder.00.scale  [JOINT_0]ENCODER_SCALE

net x-pos-fb               <=  [HMOT](CARD0).encoder.00.position
net x-vel-fb               <=  [HMOT](CARD0).encoder.00.velocity
net x-pos-fb               =>  joint.0.motor-pos-fb
net x-index-enable    joint.0.index-enable  <=>  [HMOT](CARD0).encoder.00.index-enable
net x-pos-rawcounts        <=  [HMOT](CARD0).encoder.00.rawcounts

# ---setup home / limit switch signals---

net min-home-x     =>  joint.0.home-sw-in
net min-home-x     =>  joint.0.neg-lim-sw-in
net x-pos-limit     =>  joint.0.pos-lim-sw-in

#*******************
#  AXIS Y JOINT 1
#*******************

setp   pid.y.Pgain     [JOINT_1]P
setp   pid.y.Igain     [JOINT_1]I
setp   pid.y.Dgain     [JOINT_1]D
setp   pid.y.bias      [JOINT_1]BIAS
setp   pid.y.FF0       [JOINT_1]FF0
setp   pid.y.FF1       [JOINT_1]FF1
setp   pid.y.FF2       [JOINT_1]FF2
setp   pid.y.deadband  [JOINT_1]DEADBAND
setp   pid.y.maxoutput [JOINT_1]MAX_OUTPUT
setp   pid.y.error-previous-target true

net y-index-enable  <=> pid.y.index-enable
net y-enable        =>  pid.y.enable
net y-pos-cmd       =>  pid.y.command
net y-pos-fb        =>  pid.y.feedback
net y-output        <=  pid.y.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.01.output-type 1 #PWM pin0
setp   [HMOT](CARD0).pwmgen.01.offset-mode 1 # offset mode so 50% = 0
setp   [HMOT](CARD0).pwmgen.01.scale   [JOINT_1]OUTPUT_SCALE

net y-output     => [HMOT](CARD0).pwmgen.01.value
net y-pos-cmd    <= joint.1.motor-pos-cmd
net y-enable     <= joint.1.amp-enable-out

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.01.counter-mode 0
setp    [HMOT](CARD0).encoder.01.filter 1
setp    [HMOT](CARD0).encoder.01.index-invert 0
setp    [HMOT](CARD0).encoder.01.index-mask 0
setp    [HMOT](CARD0).encoder.01.index-mask-invert 0
setp    [HMOT](CARD0).encoder.01.scale  [JOINT_1]ENCODER_SCALE

net y-pos-fb               <=  [HMOT](CARD0).encoder.01.position
net y-vel-fb               <=  [HMOT](CARD0).encoder.01.velocity
net y-pos-fb               =>  joint.1.motor-pos-fb
net y-index-enable    joint.1.index-enable  <=>  [HMOT](CARD0).encoder.01.index-enable
net y-pos-rawcounts        <=  [HMOT](CARD0).encoder.01.rawcounts

# ---setup home / limit switch signals---

net min-home-y     =>  joint.1.home-sw-in
net min-home-y     =>  joint.1.neg-lim-sw-in
net y-pos-limit     =>  joint.1.pos-lim-sw-in

#*******************
#  AXIS Z JOINT 2
#*******************

setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT
setp   pid.z.error-previous-target true

net z-index-enable  <=> pid.z.index-enable
net z-enable        =>  pid.z.enable
net z-pos-cmd       =>  pid.z.command
net z-pos-fb        =>  pid.z.feedback
net z-output        <=  pid.z.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.02.output-type 1 #PWM pin0
setp   [HMOT](CARD0).pwmgen.02.offset-mode 1 # offset mode so 50% = 0
setp   [HMOT](CARD0).pwmgen.02.scale   [JOINT_2]OUTPUT_SCALE

net z-output     => [HMOT](CARD0).pwmgen.02.value
net z-pos-cmd    <= joint.2.motor-pos-cmd
net z-enable     <= joint.2.amp-enable-out

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.02.counter-mode 0
setp    [HMOT](CARD0).encoder.02.filter 1
setp    [HMOT](CARD0).encoder.02.index-invert 0
setp    [HMOT](CARD0).encoder.02.index-mask 0
setp    [HMOT](CARD0).encoder.02.index-mask-invert 0
setp    [HMOT](CARD0).encoder.02.scale  [JOINT_2]ENCODER_SCALE

net z-pos-fb               <=  [HMOT](CARD0).encoder.02.position
net z-vel-fb               <=  [HMOT](CARD0).encoder.02.velocity
net z-pos-fb               =>  joint.2.motor-pos-fb
net z-index-enable    joint.2.index-enable  <=>  [HMOT](CARD0).encoder.02.index-enable
net z-pos-rawcounts        <=  [HMOT](CARD0).encoder.02.rawcounts

# ---setup home / limit switch signals---

net max-home-z     =>  joint.2.home-sw-in
net z-neg-limit     =>  joint.2.neg-lim-sw-in
net max-home-z     =>  joint.2.pos-lim-sw-in

#*******************
#  SPINDLE
#*******************

setp   pid.s.Pgain     [SPINDLE_0]P
setp   pid.s.Igain     [SPINDLE_0]I
setp   pid.s.Dgain     [SPINDLE_0]D
setp   pid.s.bias      [SPINDLE_0]BIAS
setp   pid.s.FF0       [SPINDLE_0]FF0
setp   pid.s.FF1       [SPINDLE_0]FF1
setp   pid.s.FF2       [SPINDLE_0]FF2
setp   pid.s.deadband  [SPINDLE_0]DEADBAND
setp   pid.s.maxoutput [SPINDLE_0]MAX_OUTPUT
setp   pid.s.error-previous-target true

net spindle-index-enable  <=> pid.s.index-enable
net spindle-enable        =>  pid.s.enable
net spindle-vel-cmd-rpm     => pid.s.command
net spindle-vel-fb-rpm      => pid.s.feedback
net spindle-output        <=  pid.s.output

# ---PWM Generator signals/setup---

setp   [HMOT](CARD0).pwmgen.05.output-type 1 #PWM pin0
setp   [HMOT](CARD0).pwmgen.05.offset-mode 1 # offset mode so 50% = 0
setp   [HMOT](CARD0).pwmgen.05.scale   [SPINDLE_0]OUTPUT_SCALE

#[SPINDLE_0]OUTPUT_SCALE

net spindle-output      => [HMOT](CARD0).pwmgen.03.value
net spindle-enable      => [HMOT](CARD0).pwmgen.03.enable
net spindle-enable      => hm2_7i97.0.7i84.0.0.output-03

# ---Encoder feedback signals/setup---

setp    [HMOT](CARD0).encoder.05.counter-mode 0
setp    [HMOT](CARD0).encoder.05.filter 1
setp    [HMOT](CARD0).encoder.05.index-invert 0
setp    [HMOT](CARD0).encoder.05.index-mask 0
setp    [HMOT](CARD0).encoder.05.index-mask-invert 0
setp    [HMOT](CARD0).encoder.05.scale  [SPINDLE_0]ENCODER_SCALE

net spindle-revs             <=   [HMOT](CARD0).encoder.05.position
net spindle-vel-fb-rps       <=   [HMOT](CARD0).encoder.05.velocity
net spindle-vel-fb-rpm       <=   [HMOT](CARD0).encoder.05.velocity-rpm
net spindle-index-enable     <=>  [HMOT](CARD0).encoder.05.index-enable

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd-rpm        <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-enable             <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
#net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb-rps         =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable

# ---Setup spindle at speed signals---

sets spindle-at-speed true


#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net axis-select-x  halui.axis.x.select
net jog-x-pos      halui.axis.x.plus
net jog-x-neg      halui.axis.x.minus
net jog-x-analog   halui.axis.x.analog
net x-is-homed     halui.joint.0.is-homed
net axis-select-y  halui.axis.y.select
net jog-y-pos      halui.axis.y.plus
net jog-y-neg      halui.axis.y.minus
net jog-y-analog   halui.axis.y.analog
net y-is-homed     halui.joint.1.is-homed
net axis-select-z  halui.axis.z.select
net jog-z-pos      halui.axis.z.plus
net jog-z-neg      halui.axis.z.minus
net jog-z-analog   halui.axis.z.analog
net z-is-homed     halui.joint.2.is-homed
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward
net spindle-manual-ccw    halui.spindle.0.reverse
net spindle-manual-stop   halui.spindle.0.stop
net machine-is-on         halui.machine.is-on
net jog-speed             halui.axis.jog-speed
net MDI-mode              halui.mode.is-mdi

# maschine ein
#net machine-is-on     =>  hm2_7i97.0.7i84.0.0.output-02

#  ---coolant signals---

net coolant-flood     <=  iocontrol.0.coolant-flood
net coolant-flood    =>  hm2_7i97.0.7i84.0.0.output-08

#  ---probe signal---

#net probe-in     =>  motion.probe-input

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

#  ---estop signals---

#net estop-out     <=  iocontrol.0.user-enable-out     #auskommentiert!!
#net estop-out     =>  iocontrol.0.emc-enable-in

#   Maschine ein aus
net maschine-ein hm2_7i97.0.7i84.0.0.input-00 => halui.machine.on     # 200
net maschine-aus hm2_7i97.0.7i84.0.0.input-00-not => halui.machine.off 


#  ---manual tool change signals---
loadusr -W hal_manualtoolchange
setp edge.0.out-width-ns 1000000000

net tool-change-request iocontrol.0.tool-change  =>  hal_manualtoolchange.change
net maho_panel.r7c3_sig-out matrix_kb.0.key.r7c3   and2.10.in0    
net tool-change-request             =>   and2.10.in1
net tool.tooluncl     toggle.3.in   <= and2.10.out
net tool.output       toggle.3.out  => hm2_7i97.0.7i84.0.0.output-04
net tool.output                     => edge.0.in
net tool-change-confirmed   iocontrol.0.tool-changed      <=  edge.0.out
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared




